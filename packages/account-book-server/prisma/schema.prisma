// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  // provider = "postgresql"
  // url      = env("DATABASE_URL")
  provider = "sqlite"
  url      = "file:./dev.db"
}

model User {
  id           String        @id @default(uuid())
  email        String        @unique
  username     String
  passwordHash String
  createdAt    DateTime      @default(now())
  token        Token[]
  userAccount  UserAccount[]
  transactions Transaction[]
}

model Token {
  id        String   @id @default(uuid())
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  createdAt DateTime @default(now())
  blocked   Boolean  @default(false)
}

model Account {
  id           String        @id @default(uuid())
  name         String
  balance      Float
  createdAt    DateTime      @default(now())
  transactions Transaction[]
  userAccounts UserAccount[]
  Category     Category[]
}

model UserAccount {
  userId    String
  accountId String
  user      User    @relation(fields: [userId], references: [id])
  account   Account @relation(fields: [accountId], references: [id])

  @@id([userId, accountId])
}

model Transaction {
  id          String    @id @default(uuid())
  userId      String
  user        User      @relation(fields: [userId], references: [id])
  accountId   String
  amount      Int
  type        String
  description String?
  createdAt   DateTime  @default(now())
  category    Category? @relation(fields: [categoryId], references: [id])
  categoryId  String
  Account     Account   @relation(fields: [accountId], references: [id])
}

model Category {
  id              String        @id @default(uuid())
  accountId       String
  name            String
  type            String
  defaultCategory Boolean       @default(false)
  account         Account       @relation(fields: [accountId], references: [id])
  transactions    Transaction[]
}
