// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  // provider = "postgresql"
  // url      = env("DATABASE_URL")
  provider = "sqlite"
  url      = "file:./dev.db"
}

model User {
  id           String        @id @default(uuid())
  email        String        @unique
  username     String
  passwordHash String
  createdAt    DateTime      @default(now())
  token        Token[]
  userAccount  UserAccount[]
  transactions Transaction[]
}

model Token {
  id        String   @id @default(uuid())
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  createdAt DateTime @default(now())
  blocked   Boolean  @default(false)
}

model Account {
  id              String            @id @default(uuid())
  name            String
  balance         Int
  createdAt       DateTime          @default(now())
  transactions    Transaction[]
  userAccounts    UserAccount[]
  category        Category[]
  financialSource FinancialSource[]
}

model UserAccount {
  userId    String
  accountId String
  user      User    @relation(fields: [userId], references: [id])
  account   Account @relation(fields: [accountId], references: [id])

  @@id([userId, accountId])
}

model Transaction {
  id                Int             @id @default(autoincrement())
  userId            String
  user              User            @relation(fields: [userId], references: [id])
  accountId         String
  amount            Int
  type              String
  description       String?
  date              DateTime
  createdAt         DateTime        @default(now())
  category          Category        @relation(fields: [categoryId], references: [id])
  categoryId        String
  Account           Account         @relation(fields: [accountId], references: [id])
  financialSource   FinancialSource @relation(fields: [financialSourceId], references: [id])
  financialSourceId String

  @@index([date(sort: Desc)])
}

model Category {
  id              String        @id @default(uuid())
  accountId       String
  name            String
  type            String
  defaultCategory Boolean       @default(false)
  account         Account       @relation(fields: [accountId], references: [id])
  transactions    Transaction[]
}

model FinancialSource {
  id           String        @id @default(uuid())
  accountId    String
  account      Account       @relation(fields: [accountId], references: [id])
  name         String
  type         String
  transactions Transaction[]
}
